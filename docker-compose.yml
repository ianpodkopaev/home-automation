services:
  mosquitto:
    image: eclipse-mosquitto:latest
    container_name: mosquitto
    restart: always
    ports:
      - "1883:1883"
      - "9001:9001"
    networks:
      - hanet
    volumes:
      - ./mosquitto/config/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - ./mosquitto/config/pwfile:/mosquitto/config/pwfile
    security_opt:  
      - no-new-privileges

  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: password1234
      POSTGRES_DB: goskript
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./postgres/init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - hanet
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 30  # Увеличиваем количество попыток
      start_period: 40s  # Добавляем задержку перед началом проверок

  homeassistant:
    image: ghcr.io/home-assistant/home-assistant:stable
    container_name: homeassistant
    restart: unless-stopped
    networks:
      - hanet
    ports:
      - "8123:8123"
    volumes:
      - ./homeassistant/configuration.yaml:/config/configuration.yaml
      - ./homeassistant/automations.yaml:/config/automations.yaml
      - ./homeassistant/virtual.yaml:/config/virtual.yaml
    environment:
      TZ: Europe/Minsk

  goskript:
    entrypoint: ["sh", "-c", "sleep 20 && ./goskript"]
    build:
      context: ./goskript
      dockerfile: Dockerfile
    container_name: goskript
    restart: always
    depends_on:
      mosquitto:
        condition: service_started
      postgres:
        condition: service_healthy
    networks:
      - hanet
    environment:
      MQTT_BROKER: "tcp://mosquitto:1883"
      CLIENT_ID: goskript
      MQTT_USER: ""
      MQTT_PASSWORD: ""
      DB_HOST: "postgres"
      DB_PORT: "5432"
      DB_USER: "postgres"
      DB_PASSWORD: "password1234"
      DB_NAME: "goskript"

networks:
  hanet:
    driver: bridge

volumes:
  postgres-data: